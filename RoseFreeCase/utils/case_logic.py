import asyncio
import random
from datetime import date
from aiogram import Router, F
from aiogram.types import Message
from config import ADMIN_ID
from utils.db_manager import get_user, update_user

router = Router()


def can_open_today(user):
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã–≤–∞–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–µ–π—Å —Å–µ–≥–æ–¥–Ω—è"""
    return user.get("last_open") != str(date.today())


@router.message(F.text.lower() == "üéÅ –æ—Ç–∫—Ä—ã—Ç—å —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –±–æ–∫—Åüåπ")
async def open_secret_box(message: Message):
    user_id = message.from_user.id
    username = message.from_user.username

    user = get_user(user_id) or {}

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–∏–º–∏—Ç 1 –∫–µ–π—Å –≤ –¥–µ–Ω—å
    if not can_open_today(user):
        await message.answer("üòÖ –¢—ã —É–∂–µ –æ—Ç–∫—Ä—ã–≤–∞–ª –±–æ–∫—Å —Å–µ–≥–æ–¥–Ω—è! –ü–æ–ø—Ä–æ–±—É–π –∑–∞–≤—Ç—Ä–∞ üåû")
        return

    # –ê–Ω–∏–º–∞—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∏—è
    await message.answer("üéÅ *–û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–µ–∫—Ä–µ—Ç–Ω—ã–π –±–æ–∫—Å...*", parse_mode="Markdown")
    await asyncio.sleep(2)
    await message.answer("‚ú® *–í—ã –≤–∏–¥–∏—Ç–µ –±–ª–µ—Å–∫ –≤–Ω—É—Ç—Ä–∏...*", parse_mode="Markdown")
    await asyncio.sleep(2)

    # –®–∞–Ω—Å 2% –Ω–∞ –≤—ã–ø–∞–¥–µ–Ω–∏–µ —Ä–æ–∑—ã
    drop_chance = random.random()
    if drop_chance <= 0.02:
        await message.answer("üåπ *–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í–∞–º –≤—ã–ø–∞–ª–∞ —Ä–æ–∑–∞!*", parse_mode="Markdown")

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        new_roses = user.get("roses", 0) + 1
        update_user(user_id, username, roses=new_roses, last_open=str(date.today()))

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∞
        try:
            await bot.send_message(
                ADMIN_ID,
                f"üåπ *–ù–æ–≤–∞—è —Ä–æ–∑–∞!*\n\n"
                f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username or '–±–µ–∑ username'}\n"
                f"ID: `{user_id}`\n"
                f"–í—Å–µ–≥–æ —Ä–æ–∑: {new_roses}",
                parse_mode="Markdown"
            )
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∞: {e}")

    else:
        # –û–±–Ω–æ–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –¥–∞—Ç—É –æ—Ç–∫—Ä—ã—Ç–∏—è
        update_user(user_id, username, last_open=str(date.today()))
        await message.answer("üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ä–æ–∑–∞ –Ω–µ –≤—ã–ø–∞–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞!")
